<apex:page controller="xsms.SendSMS_Controller" id="sendSMS">
    <SCRIPT>
        
          String.prototype.trim = function () {
               return this.replace(/^\s*/, "").replace(/\s*$/, "");
          }
          //var objectName ; 
          var objectId;
          var whoId;
          var whatId;
          var templateId;
          function openPopupSelectSMSTemplate()
          {  
              var key = document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:smsTemplateSectionItem:smsTemplateName}').value; 
              window.open('/apex/SMSTemplate_Lookup?key='+key,'Results','menubar=0,resizable=0,width=950,height=500,scrollbars=1');
          }
            
          function setSelectedSMSTemplate(id,name,body)
          { 
              document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:smsTemplateSectionItem:smsTemplateName}').value=name;
              document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:smsTemplateSectionItem:smsTemplateId}').value=id;
              //document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:messageSectionItem:message}').value=body;
              
              whatId = null;
              whoId = null;
              templateId = id;
              //alert('calling ajax');
              renderMessageContent(whatId,whoId,templateId);
              //alert('after calling ajax');
          }
          
          function validate(){
            //var message = document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:messageSectionItem:message}').value;
            var message = document.getElementById('message').value;
            if(message == null || message.trim() == ''){
                alert('Please provide message body!');
                return false;
            }else{
                //populate task description
                 document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:messageSectionItem:messageText}').value = message;
                return true;
            }
          }
          
          function setMessageBody(){
            //alert('setMessageBody');
            var taskDesc = document.getElementById('{!$Component.sendSMS:mainForm:messagetext}').value;
            //alert('KUNAL'+taskDesc);
            document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:messageSectionItem:message}').value = taskDesc;
          }
          
          function clearMessage(){
            var answer = confirm("Are you sure ?")
            if (answer){
                //document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:messageSectionItem:message}').value = '';
                document.getElementById('message').value = '';
            }
            return false;
          }
          
          function refreshMesssage(){
            templateId = document.getElementById('{!$Component.sendSMS:mainForm:mainBlock:mainSection:smsTemplateSectionItem:smsTemplateId}').value;
            if(templateId == null){
                alert('No SMS Template selected !');
            }else{
                whatId = null;
                whoId = null;
                renderMessageContent(whatId,whoId,templateId);
            }
            return false;
          }
       
    </SCRIPT>
    <apex:stylesheet value="/sCSS/19.0/sprites/1277316062000/Theme3/default/extended.css" />
    <div class="blank">&nbsp;</div>
    <div class="bPageTitle">
    <div class="ptBody secondaryPalette">
    <div class="content"><img src="/s.gif" alt="Create Task Comment"
        class="pageTitleIcon" title="Task Comment for Workflow based SMS" />
    <h1 class="pageType">xSMS<span class="titleSeparatingColon">:</span></h1>
    <h2 class="pageDescription">Create Task Comment for Workflow Based
    SMS.</h2>
    <div class="blank">&nbsp;</div>
    </div>
    </div>
    </div>
    <div class="blank">&nbsp;</div>
    <div class="bOverviewSearch">
    <div class="view">To create workflow based SMS: <BR></BR>
    1. Select "Related To" object on which you are creating Workflow. <BR></BR>
    2. Select field on the selected "Related To" object containing mobile
    numbers to which SMS is to be send. <BR></BR>
    3. Select SMS Template from available templates OR edit SMS Text to be
    send under "Message". <BR></BR>
    4. Copy "Task Comment" and paste against "Comments" field while
    creating workflow task.</div>
    <div class="messages"></div>
    </div>
    <apex:pageMessages />

    <apex:form id="mainForm">
        <apex:actionFunction name="resetFieldOptions" action="{!resetFieldOptions}"
                            rerender="mobileNumField" status="fieldStatus" />
        <apex:actionFunction name="renderMessageContent"
            action="{!renderMessageContent}" immediate="true"
            status="renderMessageStatus" reRender="messagePanel">
            <apex:param name="whatid" value="" />
            <apex:param name="whoid" value="" />
            <apex:param name="templateid" value="" />
        </apex:actionFunction>
        <apex:pageBlock title="Send SMS" mode="edit" id="mainBlock">
            <apex:pageBlockButtons >
                <apex:commandButton action="{!createTaskComment}"
                    value="Create Workflow  Task Comment" onClick="return validate()" />
            </apex:pageBlockButtons>
            <apex:pageBlockSection columns="1" id="mainSection">
                <apex:pageBlockSectionItem id="relatedToSectionItem"
                    helpText="Select Object on which workflow based SMS Task is to be developed.">
                    <apex:outputLabel value="Related To" for="relatedto" />
                    <apex:outputPanel id="requiredPanelOuter" layout="block"
                        styleClass="requiredInput">
                        <apex:outputPanel id="requiredPanelInner"
                            styleClass="requiredBlock" />
                        <apex:selectList value="{!selectedObject}" multiselect="false"
                            id="relatedto" required="true" size="1" onChange="resetFieldOptions()">
                            <apex:selectOptions value="{!objectOptions}" />
                        </apex:selectList>
                        
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="fieldSectionItem"
                    helpText="Select field on selected 'Realted To' object which contains mobile numbers to which SMS is to be send.">
                    <apex:outputLabel value="Mobile Number Field" for="mobileNumField" />
                    <apex:outputPanel >
                        <apex:selectList value="{!selectedObjectField}"
                            multiselect="false" id="mobileNumField" required="false" size="1">
                            <apex:selectOptions value="{!fieldOptions}" />
                        </apex:selectList>
                        <div class="mouseOverInfoOuter" onfocus="addMouseOver(this)"
                            onmouseover="addMouseOver(this)"><img src="/s.gif" alt=""
                            class="infoIcon" title="" />
                        <div class="mouseOverInfo" style="opacity: 0; display: none;">Depends
                        on "Related To" selection.</div>
                        </div>
                        <apex:actionStatus id="fieldStatus" 
                           startText=" (refreshing field options...)" />
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="mobilenumSectionItem"
                    helpText="Provide mobile numbers (seperated by comma) to whom you want to send SMS. Choose this option if you want to send SMS to hard-coded mobile numbers else select field of 'Related To' object containing mobile numbers." >
                    <apex:outputLabel value="Mobile Numbers" for="mobilenum" />
                    <apex:inputTextArea rows="3" cols="30" value="{!mobileNumbers}" id="mobilenum"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="smsTemplateSectionItem"
                    helpText="Select SMS Template OR provide message body."
                    dataTitle="SMS Template">
                    <apex:outputLabel value="SMS Template" for="smsTemplateName" />
                    <apex:outputPanel id="notrequiredPanelOuter" layout="block"
                        styleClass="notrequiredInput">
                        <apex:outputPanel id="notrequiredPanelInner"
                            styleClass="notrequiredBlock" />
                        <apex:inputHidden value="{!smsTemplateId}" id="smsTemplateId" />
                        <apex:inputText disabled="true" size="40" value="{!smsTemplateName}"
                            id="smsTemplateName" />
                        <a href="JavaScript: openPopupSelectSMSTemplate()"
                            id="smsTemplateSearchLink" onclick="setLastMousePosition(event)"
                            title="Select SMS Template Lookup (New Window)"> <img
                            id="SearchImage1" src="/s.gif"
                            alt="SMS Template Lookup (New Window)" class="lookupIcon"
                            onblur="this.className = 'lookupIcon';"
                            onfocus="this.className = 'lookupIconOn';"
                            onmouseout="this.className = 'lookupIcon';"
                            onmouseover="this.className = 'lookupIconOn';"
                            title="SMS Template Lookup (New Window)" /> </a>
                        <div class="mouseOverInfoOuter" onfocus="addMouseOver(this)"
                            onmouseover="addMouseOver(this)"><img src="/s.gif" alt=""
                            class="infoIcon" title="" />
                        <div class="mouseOverInfo" style="opacity: 0; display: none;">Click
                        the lookup icon to select SMS Template.</div>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="messageSectionItem">
                    <apex:outputLabel value="Message" for="message" />
                    <apex:outputPanel id="messagePanel">
                        <textArea
                            style="font-size: 1.4em; color: #0C0C0C; font-family: courier new"
                            rows="6" cols="50" id="message">{!JSENCODE(task.Description)}</textArea>
                        <apex:inputHidden value="{!task.Description}" id="messageText" />
                        <apex:commandLink immediate="true" action="{!cancel}"
                            onclick="return refreshMesssage()">
                            <apex:image id="refreshImage"
                                value="{!$Resource.xsms__xsms_img_refresh}"
                                alt="Refresh SMS text from selected template"
                                title="Refresh SMS text from selected template" height="25px"
                                width="25px" />
                        </apex:commandLink>
                        &nbsp;<apex:commandLink immediate="true"
                            action="{!cancel}" onclick="return clearMessage()">
                            <apex:image id="clearImage" value="{!$Resource.xsms__xsms_img_clear}"
                                alt="Clear SMS text" title="Clear SMS text" height="25px"
                                width="25px" />
                        </apex:commandLink>
                        <apex:actionStatus style="font-size:1.2em;color:#003E00;font-family:courier new"
                            startText="[ applying template , please wait ..]"
                            id="renderMessageStatus" />
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="taskCommentSectionItem"
                    helpText="Based on above selection.">
                    <apex:outputLabel value="Task Comment" for="taskComment" />
                    <apex:outputPanel id="messagePanel">
                        <apex:inputTextArea readonly="true"
                            style="font-size:1.4em;color:#0C0C0C;font-family:courier new"
                            rows="6" cols="50" id="taskComment" value="{!taskComment}"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>

            </apex:pageBlockSection>
        </apex:pageBlock>
        <c:xSMS_Footer ></c:xSMS_Footer>
    </apex:form>
</apex:page>